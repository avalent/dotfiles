if &compatible
  set nocompatible
end

" Shim command and function to allow migration from Vundle to vim-plug.
function! VundleToPlug(vundle_command, arg, ...)
  echom "You are using Vundle's `".a:vundle_command."` command to declare plugins. Dotfiles now uses vim-plug for plugin mangagement. Please rename uses of `".a:vundle_command."` to `Plug`. Plugin was '".a:arg."'."
  let vim_plug_options = {}

  if a:0 > 0
    if has_key(a:1, 'name')
      let name = a:1.name
      let vim_plug_options.dir = "$HOME/.vim/bundle/".a:1.name
    endif

    if has_key(a:1, 'rtp')
      let vim_plug_options.rtp = a:1.rtp
    endif
  endif

  Plug a:arg, vim_plug_options
endfunction

com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

call plug#begin('~/.vim/bundle')

Plug 'Shougo/vimproc.vim', { 'do': 'make' }

" Define bundles via Github repos
Plug 'LnL7/vim-nix'
Plug 'airblade/vim-gitgutter'
Plug 'altercation/vim-colors-solarized'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'christoomey/vim-run-interactive'
Plug 'christoomey/vim-tmux-navigator'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'godlygeek/tabular'
Plug 'easymotion/vim-easymotion'
Plug 'myusuf3/numbers.vim'
Plug 'pbrisbin/vim-mkdir'
Plug 'Raimondi/delimitMate'
Plug 'rking/ag.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'slim-template/vim-slim'
Plug 'thoughtbot/vim-rspec'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'

" Snippet engine
Plug 'SirVer/ultisnips'

" Snippet library
Plug 'honza/vim-snippets'

" Scala
"Plug 'derekwyatt/vim-scala'

" Haskell
" TODO vim-haskell-now

" Completion
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
" TODO: Enable semantic completion for a bunch of languages
" https://github.com/Valloric/YouCompleteMe
" Plug 'Valloric/YouCompleteMe', { 'do': './install.py --clang-completer --omnisharp-completer --gocode-completer --tern-completer --racer-completer' }
" Alternatively to compile with everything enabled you can pass the all flag:
" So, to install with all language features, ensure xbuild, go, tsserver, node, npm, rustc, and cargo tools are installed and in your PATH
" Plug 'Valloric/YouCompleteMe', { 'do': './install.py --all' }

" Fuzzy search
"Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
"Plug 'Shougo/unite.vim'
"Plug 'Shougo/unite-session'
"Plug 'Shougo/neomru.vim'
"Plug 'thinca/vim-unite-history'

" Unused plugins
"Plug 'kchmck/vim-coffee-script'
"Plug 'vim-ruby/vim-ruby'
"Plug 'vim-scripts/tComment'
"Plug 'tpope/vim-rails'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
